// room script file

function room_Load()
{
  Mouse.EnableMode(eModeInteract);
  Mouse.Mode = eModeInteract;
  Mouse.Visible = true;
  
  // Back-Button aktivieren
  gBackFromMinigame.Visible = true;
  
  // Random Rotation
  int rotation[9]; // Array für Rotationswinkel (9 Einträge)
  int rotation90 = 0;
  bool rotate360 = false;
  for (int i = 0; i < 9; i++)
  {
    rotation90 = Random(3);
    rotate360 = false;
    if (rotation90 == 0) {
      rotation[i] = 180;
      rotate360 = true;
    } else if (rotation90 == 1) {
      rotation[i] = 90;
    } else if (rotation90 == 2) {
      rotation[i] = 180;
    } else {
      rotation[i] = 270;
    }
  }
  
  
  // Drawing-Surface
  DrawingSurface *surface = Room.GetDrawingSurfaceForBackground();
  
  // 1-1
  DynamicSprite* sprite1 = DynamicSprite.CreateFromExistingSprite(object[7].Graphic);
  sprite1.Rotate(rotation[0]);
  sprite1degree = rotation[0]; // globale Variable
  if (rotation[0] == 180 && rotate360 == true) {
    sprite1.Rotate(180);
    sprite1degree = 0;
  }
  surface.DrawImage(65, 10, sprite1.Graphic);
  // 1-2
  DynamicSprite* sprite2 = DynamicSprite.CreateFromExistingSprite(object[8].Graphic);
  sprite2.Rotate(rotation[1]);
  sprite2degree = rotation[1]; // globale Variable
  if (rotation[1] == 180 && rotate360 == true) {
    sprite2.Rotate(180);
    sprite2degree = 0;
  }
  surface.DrawImage(125, 10, sprite2.Graphic);
  // 1-3
  DynamicSprite* sprite3 = DynamicSprite.CreateFromExistingSprite(object[0].Graphic);
  sprite3.Rotate(rotation[2]);
  sprite3degree = rotation[2]; // globale Variable
  if (rotation[2] == 180 && rotate360 == true) {
    sprite3.Rotate(180);
    sprite3degree = 0;
  }
  surface.DrawImage(185, 10, sprite3.Graphic);
  // 2-1
  DynamicSprite* sprite4 = DynamicSprite.CreateFromExistingSprite(object[1].Graphic);
  sprite4.Rotate(rotation[3]);
  sprite4degree = rotation[3]; // globale Variable
  if (rotation[3] == 180 && rotate360 == true) {
    sprite4.Rotate(180);
    sprite4degree = 0;
  }
  surface.DrawImage(65, 70, sprite4.Graphic);
  // 2-2
  DynamicSprite* sprite5 = DynamicSprite.CreateFromExistingSprite(object[2].Graphic);
  sprite5.Rotate(rotation[4]);
  sprite5degree = rotation[4]; // globale Variable
  if (rotation[4] == 180 && rotate360 == true) {
    sprite5.Rotate(180);
    sprite5degree = 0;
  }
  surface.DrawImage(125, 70, sprite5.Graphic);
  // 2-3
  DynamicSprite* sprite6 = DynamicSprite.CreateFromExistingSprite(object[3].Graphic);
  sprite6.Rotate(rotation[5]);
  sprite6degree = rotation[5]; // globale Variable
  if (rotation[5] == 180 && rotate360 == true) {
    sprite6.Rotate(180);
    sprite6degree = 0;
  }
  surface.DrawImage(185, 70, sprite6.Graphic);
  // 3-1
  DynamicSprite* sprite7 = DynamicSprite.CreateFromExistingSprite(object[4].Graphic);
  sprite7.Rotate(rotation[6]);
  sprite7degree = rotation[6]; // globale Variable
  if (rotation[6] == 180 && rotate360 == true) {
    sprite7.Rotate(180);
    sprite7degree = 0;
  }
  surface.DrawImage(65, 130, sprite7.Graphic);
  // 3-2
  DynamicSprite* sprite8 = DynamicSprite.CreateFromExistingSprite(object[5].Graphic);
  sprite8.Rotate(rotation[7]);
  sprite8degree = rotation[7]; // globale Variable
  if (rotation[7] == 180 && rotate360 == true) {
    sprite8.Rotate(180);
    sprite8degree = 0;
  }
  surface.DrawImage(125, 130, sprite8.Graphic);
  // 3-3
  DynamicSprite* sprite9 = DynamicSprite.CreateFromExistingSprite(object[6].Graphic);
  sprite9.Rotate(rotation[8]);
  sprite9degree = rotation[8]; // globale Variable
  if (rotation[8] == 180 && rotate360 == true) {
    sprite9.Rotate(180);
    sprite9degree = 0;
  }
  surface.DrawImage(185, 130, sprite9.Graphic);
    
  
  //object[7].Graphic = sprite1.Graphic;
  //object[8].Graphic = sprite2.Graphic;
  //object[0].Graphic = sprite3.Graphic;
  //object[1].Graphic = sprite4.Graphic;
  //object[2].Graphic = sprite5.Graphic;
  //object[3].Graphic = sprite6.Graphic;
  //object[4].Graphic = sprite7.Graphic;
  //object[5].Graphic = sprite8.Graphic;
  //object[6].Graphic = sprite9.Graphic;
  
  
  
  surface.Release();
  sprite1.Delete(); 
}


function hTile11_AnyClick()
{
  DynamicSprite* sprite1 = DynamicSprite.CreateFromExistingSprite(object[7].Graphic);
  DrawingSurface *surface = Room.GetDrawingSurfaceForBackground();
  if (sprite1degree == 0) {
    sprite1.Rotate(90);
    sprite1degree = 90;
  } else if (sprite1degree == 90) {
    sprite1.Rotate(180);
    sprite1degree = 180;
  } else if (sprite1degree == 180) {
    sprite1.Rotate(270);
    sprite1degree = 270;
  } else {
    sprite1.Rotate(180);
    sprite1.Rotate(180);
    sprite1degree = 0;
  }
  surface.DrawImage(65, 10, sprite1.Graphic);
  aClickTile.Play();
  surface.Release();
  sprite1.Delete(); 
}

function hTile12_AnyClick()
{
  DynamicSprite* sprite2 = DynamicSprite.CreateFromExistingSprite(object[8].Graphic);
  DrawingSurface *surface = Room.GetDrawingSurfaceForBackground();
  if (sprite2degree == 0) {
    sprite2.Rotate(90);
    sprite2degree = 90;
  } else if (sprite2degree == 90) {
    sprite2.Rotate(180);
    sprite2degree = 180;
  } else if (sprite2degree == 180) {
    sprite2.Rotate(270);
    sprite2degree = 270;
  } else {
    sprite2.Rotate(180);
    sprite2.Rotate(180);
    sprite2degree = 0;
  }
  surface.DrawImage(125, 10, sprite2.Graphic);
  aClickTile.Play();
  surface.Release();
  sprite2.Delete();
}

function hTile13_AnyClick()
{
  DynamicSprite* sprite3 = DynamicSprite.CreateFromExistingSprite(object[0].Graphic);
  DrawingSurface *surface = Room.GetDrawingSurfaceForBackground();
  if (sprite3degree == 0) {
    sprite3.Rotate(90);
    sprite3degree = 90;
  } else if (sprite3degree == 90) {
    sprite3.Rotate(180);
    sprite3degree = 180;
  } else if (sprite3degree == 180) {
    sprite3.Rotate(270);
    sprite3degree = 270;
  } else {
    sprite3.Rotate(180);
    sprite3.Rotate(180);
    sprite3degree = 0;
  }
  surface.DrawImage(185, 10, sprite3.Graphic);
  aClickTile.Play();
  surface.Release();
  sprite3.Delete();
}

function hTile21_AnyClick()
{
  DynamicSprite* sprite4 = DynamicSprite.CreateFromExistingSprite(object[1].Graphic);
  DrawingSurface *surface = Room.GetDrawingSurfaceForBackground();
  if (sprite4degree == 0) {
    sprite4.Rotate(90);
    sprite4degree = 90;
  } else if (sprite4degree == 90) {
    sprite4.Rotate(180);
    sprite4degree = 180;
  } else if (sprite4degree == 180) {
    sprite4.Rotate(270);
    sprite4degree = 270;
  } else {
    sprite4.Rotate(180);
    sprite4.Rotate(180);
    sprite4degree = 0;
  }
  surface.DrawImage(65, 70, sprite4.Graphic);
  aClickTile.Play();
  surface.Release();
  sprite4.Delete();
}

function hTile22_AnyClick()
{
  DynamicSprite* sprite5 = DynamicSprite.CreateFromExistingSprite(object[2].Graphic);
  DrawingSurface *surface = Room.GetDrawingSurfaceForBackground();
  if (sprite5degree == 0) {
    sprite5.Rotate(90);
    sprite5degree = 90;
  } else if (sprite5degree == 90) {
    sprite5.Rotate(180);
    sprite5degree = 180;
  } else if (sprite5degree == 180) {
    sprite5.Rotate(270);
    sprite5degree = 270;
  } else {
    sprite5.Rotate(180);
    sprite5.Rotate(180);
    sprite5degree = 0;
  }
  surface.DrawImage(125, 70, sprite5.Graphic);
  aClickTile.Play();
  surface.Release();
  sprite5.Delete();
}

function hTile23_AnyClick()
{
  DynamicSprite* sprite6 = DynamicSprite.CreateFromExistingSprite(object[3].Graphic);
  DrawingSurface *surface = Room.GetDrawingSurfaceForBackground();
  if (sprite6degree == 0) {
    sprite6.Rotate(90);
    sprite6degree = 90;
  } else if (sprite6degree == 90) {
    sprite6.Rotate(180);
    sprite6degree = 180;
  } else if (sprite6degree == 180) {
    sprite6.Rotate(270);
    sprite6degree = 270;
  } else {
    sprite6.Rotate(180);
    sprite6.Rotate(180);
    sprite6degree = 0;
  }
  surface.DrawImage(185, 70, sprite6.Graphic);
  aClickTile.Play();
  surface.Release();
  sprite6.Delete();
}

function hTile31_AnyClick()
{
  DynamicSprite* sprite7 = DynamicSprite.CreateFromExistingSprite(object[4].Graphic);
  DrawingSurface *surface = Room.GetDrawingSurfaceForBackground();
  if (sprite7degree == 0) {
    sprite7.Rotate(90);
    sprite7degree = 90;
  } else if (sprite7degree == 90) {
    sprite7.Rotate(180);
    sprite7degree = 180;
  } else if (sprite7degree == 180) {
    sprite7.Rotate(270);
    sprite7degree = 270;
  } else {
    sprite7.Rotate(180);
    sprite7.Rotate(180);
    sprite7degree = 0;
  }
  surface.DrawImage(65, 130, sprite7.Graphic);
  aClickTile.Play();
  surface.Release();
  sprite7.Delete();
}

function hTile32_AnyClick()
{
  DynamicSprite* sprite8 = DynamicSprite.CreateFromExistingSprite(object[5].Graphic);
  DrawingSurface *surface = Room.GetDrawingSurfaceForBackground();
  if (sprite8degree == 0) {
    sprite8.Rotate(90);
    sprite8degree = 90;
  } else if (sprite8degree == 90) {
    sprite8.Rotate(180);
    sprite8degree = 180;
  } else if (sprite8degree == 180) {
    sprite8.Rotate(270);
    sprite8degree = 270;
  } else {
    sprite8.Rotate(180);
    sprite8.Rotate(180);
    sprite8degree = 0;
  }
  surface.DrawImage(125, 130, sprite8.Graphic);
  aClickTile.Play();
  surface.Release();
  sprite8.Delete();
}

function hTile33_AnyClick()
{
  DynamicSprite* sprite9 = DynamicSprite.CreateFromExistingSprite(object[6].Graphic);
  DrawingSurface *surface = Room.GetDrawingSurfaceForBackground();
  if (sprite9degree == 0) {
    sprite9.Rotate(90);
    sprite9degree = 90;
  } else if (sprite9degree == 90) {
    sprite9.Rotate(180);
    sprite9degree = 180;
  } else if (sprite9degree == 180) {
    sprite9.Rotate(270);
    sprite9degree = 270;
  } else {
    sprite9.Rotate(180);
    sprite9.Rotate(180);
    sprite9degree = 0;
  }
  surface.DrawImage(185, 130, sprite9.Graphic);
  aClickTile.Play();
  surface.Release();
  sprite9.Delete();
}

function room_RepExec()
{
  // Wenn das Spiel gelöst wurde:
  if (sprite1degree == 0 && sprite2degree == 0 && sprite3degree == 0 && sprite4degree == 0 && sprite5degree == 0 && sprite6degree == 0 && sprite7degree == 0 && sprite8degree == 0 && sprite9degree == 0) {
    aSuccess.Play();
    player.LoseInventory(iBrokenList);
    player.AddInventory(iFixedList);
    cYou.ChangeRoom(roomNumber);
    GiveScore(15);
    gBackFromMinigame.Visible = false;
  }
}
